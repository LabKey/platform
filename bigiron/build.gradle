import org.labkey.gradle.util.BuildUtils
import org.labkey.gradle.util.ExternalDependency

plugins {
    id 'org.labkey.build.module'
}

dependencies {
    BuildUtils.addExternalDependency(
        project,
        new ExternalDependency(
            "com.microsoft.sqlserver:mssql-jdbc:${mssqlJdbcVersion}", // MS SQLServer JDBC Driver
            "Microsoft JDBC Driver for SQL Server",
            "Microsoft",
            "https://github.com/Microsoft/mssql-jdbc",
            ExternalDependency.MIT_LICENSE_NAME,
            ExternalDependency.MIT_LICENSE_URL,
            "Connect with Microsoft SQL Server database servers"
        )
    )

    BuildUtils.addExternalDependency(
        project,
        new ExternalDependency(
            "com.oracle.database.jdbc:ojdbc11:${oracleJdbcVersion}", // Oracle JDBC Driver and dependencies
            "Oracle JDBC Driver",
            "Oracle",
            "https://www.oracle.com/database/technologies/appdev/jdbc.html",
            "Oracle Free Use License",
            "https://www.oracle.com/downloads/licenses/oracle-free-license.html",
            "Connect with Oracle database servers"
        )
// This exclude is needed only if we pull in "ojdbc11-production", which includes a bunch of dependencies that we think
// are optional. For some reason, ojdbc11-production evades our credits handling, so we're using ojdbc11 for now.
//        {
//            // https://stackoverflow.com/questions/44916255/classnotfoundexception-oracle-i18n-util-localemapper-on-tomcat-tld-scanning-ojd
//            exclude group: "com.oracle.database.xml", module: "xmlparserv2" // Conflicts with Xerces
//        }
    )

    BuildUtils.addExternalDependency(
        project,
        new ExternalDependency(
            "com.mysql:mysql-connector-j:${mysqlDriverVersion}",
            "MySQL JDBC Driver",
            "MySQL",
            "https://dev.mysql.com/downloads/connector/j",
            "GPL v2 with Universal FOSS Exception",
            "https://oss.oracle.com/licenses/universal-foss-exception/",
            "Connect with MySQL database servers"
        ),
        {
            exclude group: "com.google.protobuf", module: "protobuf-java" // We haven't needed this in the past...
        }
    )
}
