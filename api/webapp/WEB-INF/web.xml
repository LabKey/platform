<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
     version="2.4">
    <display-name>LabKey Server</display-name>

    <listener>
        <listener-class>org.labkey.api.util.ContextListener</listener-class>
    </listener>

    <!-- Example filter to set character encoding on each request -->
    <filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>org.labkey.core.filters.SetCharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>ignore</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>Form Authentication Filter</filter-name>
        <filter-class>org.labkey.api.security.AuthFilter</filter-class>
    </filter>
    <filter>
        <filter-name>Transaction Filter</filter-name>
        <filter-class>org.labkey.api.data.TransactionFilter</filter-class>
    </filter>

    <!-- filter for fast polling -->
    <filter>
        <filter-name>PollingFilter</filter-name>
        <filter-class>org.labkey.api.util.PollingUtil$PollingFilter</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>PollingFilter</filter-name>
        <url-pattern>*.poll</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>ShortURLFilter</filter-name>
        <filter-class>org.labkey.core.view.ShortURLFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ShortURLFilter</filter-name>
        <url-pattern>*.url</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>Module Loader</filter-name>
        <filter-class>org.labkey.api.module.ModuleLoader</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>Form Authentication Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>Module Loader</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>Transaction Filter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>Transaction Filter</filter-name>
        <url-pattern>*.jpf</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>Transaction Filter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>Transaction Filter</filter-name>
        <url-pattern>*.view</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>Transaction Filter</filter-name>
        <url-pattern>*.api</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>Transaction Filter</filter-name>
        <url-pattern>*.post</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>ViewServlet</servlet-name>
        <servlet-class>org.labkey.api.view.ViewServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>Kaptcha</servlet-name>
        <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
        <init-param>
            <param-name>kaptcha.textproducer.char.length</param-name>
            <param-value>6</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>Kaptcha</servlet-name>
        <url-pattern>/kaptcha.jpg</url-pattern>
    </servlet-mapping>

    <!--
    EXPERIMENTAL:
    File Servlet. Maps standard requests for files onto the filecontent module.
    Requests like http://host/labkey/files/home/test.pdf become
    http://host/labkey/filecontent/home/sendFile.view?fileName=test.pdf
    see http://host/labkey/filecontent/home/begin.view for description of how to
    set up a static web parallel to the labkey folder hierarchy
    -->
    <servlet>
        <servlet-name>FileServlet</servlet-name>
        <servlet-class>org.labkey.api.view.FileServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>ImageServlet</servlet-name>
        <servlet-class>org.labkey.api.attachments.ImageServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>static</servlet-name>
        <servlet-class>org.labkey.core.webdav.WebdavServlet</servlet-class>
        <init-param>
          <param-name>resolver</param-name>
          <param-value>org.labkey.api.webdav.ModuleStaticResolverImpl</param-value>
        </init-param>
    </servlet>

    <!--
        even though there is one webdav tree rooted at "/" we still use two servlet bindings.
        This is because we want /_webdav/* to be resolve BEFORE all other servlet-mappings
        and /* to resolve AFTER all other servlet-mappings
    -->
    <servlet-mapping>
        <servlet-name>static</servlet-name>
        <url-pattern>/_webdav/*</url-pattern>
    </servlet-mapping>


    <servlet-mapping>
        <servlet-name>ViewServlet</servlet-name>
        <url-pattern>*.view</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ViewServlet</servlet-name>
        <url-pattern>*.api</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ViewServlet</servlet-name>
        <url-pattern>*.post</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ImageServlet</servlet-name>
        <url-pattern>*.image</url-pattern>
    </servlet-mapping>
    <!--
    maps http://host/labkey/files/proj/dir/test.html to
    http://host/labkey/filecontent/proj/dir/sendFile.view?file=test.html
    -->
    <servlet-mapping>
        <servlet-name>FileServlet</servlet-name>
        <url-pattern>/files/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>static</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
        <welcome-file>/</welcome-file>
    </welcome-file-list>

    <resource-ref>
        <res-ref-name>mail/Session</res-ref-name>
        <res-type>javax.mail.Session</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <mime-mapping>
        <extension>wsdl</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <jsp-config>
        <jsp-property-group>
            <display-name>LabKey</display-name>
            <url-pattern>*.jsp</url-pattern>
            <!-- This fragment is injected into every JSP at Java translation time to replace the standard JspWriter -->
            <include-prelude>/WEB-INF/jspWriter.jspf</include-prelude>
        </jsp-property-group>
    </jsp-config>

</web-app>
