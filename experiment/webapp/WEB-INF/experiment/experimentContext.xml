<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="experimentPipelineRegistry" class="org.labkey.api.pipeline.TaskPipelineRegistrar">
        <property name="factoryImpls">
            <list>
                <bean class="org.labkey.experiment.pipeline.XarGeneratorTask$Factory"/>
                <bean class="org.labkey.experiment.pipeline.MoveRunsTaskFactory">
                    <property name="location" value="webserver-high-priority" />
                </bean>
                <bean class="org.labkey.experiment.pipeline.SampleReloadTask$Factory"/>
            </list>
        </property>

        <property name="pipelines">
            <list>
                <!-- Move runs job pipeline -->
                <bean class="org.labkey.api.pipeline.TaskPipelineSettings">
                    <constructor-arg type="java.lang.Class" value="org.labkey.experiment.pipeline.MoveRunsPipelineJob"/>
                    <property name="taskProgressionSpec">
                        <list>
                            <bean id="moveRuns" class="org.labkey.api.pipeline.TaskId">
                                <constructor-arg><value type="java.lang.Class">org.labkey.experiment.pipeline.MoveRunsTask</value></constructor-arg>
                            </bean>
                        </list>
                    </property>
                </bean>

                <!-- Sample Type reload pipeline -->
                <bean class="org.labkey.api.pipeline.file.FileAnalysisTaskPipelineSettings">
                    <constructor-arg value="SampleReloadTask"/>
                    <property name="description" value="Import Samples from Data File"/>
                    <property name="protocolObjectId" value="experiment.sampleReload"/>
                    <property name="protocolName" value="Sample Reload"/>
                    <property name="protocolFactoryName" value="sampleReload"/>
                    <property name="defaultDisplayState" value="hidden"/>
                    <property name="allowForTriggerConfiguration" value="true"/>
                    <property name="initialInputExts">
                        <list>
                            <ref bean="csvFileType"/>
                            <ref bean="tsvFileType"/>
                            <ref bean="xlsFileType"/>
                            <ref bean="xlsxFileType"/>
                        </list>
                    </property>
                    <property name="taskProgressionSpec">
                        <list>
                            <bean id="sampleReloadTask" class="org.labkey.api.pipeline.TaskId">
                                <constructor-arg><value type="java.lang.Class">org.labkey.experiment.pipeline.SampleReloadTask</value></constructor-arg>
                            </bean>
                        </list>
                    </property>
                    <property name="helpText" value="The selected Pipeline task can be initiated on .csv, .tsv and Excel files.
                        The task can reload data into existing sample types as well as create new sample types." />
                    <property name="customFields">
                        <list>
                            <bean class="org.labkey.api.formSchema.RadioField">
                                <constructor-arg index="0" value="insertOption"/>
                                <constructor-arg index="1" value="Action"/>
                                <constructor-arg index="2" value="false" />
                                <constructor-arg index="3" value="APPEND" />
                                <constructor-arg index="4">
                                    <list>
                                        <bean class="org.labkey.api.formSchema.Option">
                                            <constructor-arg index="0" value="MERGE"/>
                                            <constructor-arg index="1" value="Merge"/>
                                        </bean>
                                        <bean class="org.labkey.api.formSchema.Option">
                                            <constructor-arg index="0" value="UPDATE"/>
                                            <constructor-arg index="1" value="Update"/>
                                        </bean>
                                        <bean class="org.labkey.api.formSchema.Option">
                                            <constructor-arg index="0" value="APPEND"/>
                                            <constructor-arg index="1" value="Append"/>
                                        </bean>
                                    </list>
                                </constructor-arg>
                                <constructor-arg index="5" value="Choose Merge to update existing samples or to insert new samples. Choose Update to update exsitng rows if all the incoming rows match existing rows. By default data is inserted and
                                will fail if a row matching the incoming data already exists."/>
                            </bean>

                            <bean class="org.labkey.api.formSchema.CheckboxField">
                                <constructor-arg index="0" value="alternateKeyLookup"/>
                                <constructor-arg index="1" value="Import Lookups by Alternate Key"/>
                                <constructor-arg index="2" value="false" />
                                <constructor-arg index="3" value="false"/>
                                <constructor-arg index="4" value="Enable to allow lookups to be resolved by values other than the table primary key."/>
                            </bean>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="csvFileType" class="org.labkey.api.util.FileType">
        <constructor-arg value=".csv"/>
    </bean>
    <bean id="tsvFileType" class="org.labkey.api.util.FileType">
        <constructor-arg value=".tsv"/>
    </bean>
    <bean id="xlsxFileType" class="org.labkey.api.util.FileType">
        <constructor-arg value=".xlsx"/>
    </bean>
    <bean id="xlsFileType" class="org.labkey.api.util.FileType">
        <constructor-arg value=".xls"/>
    </bean>
</beans>