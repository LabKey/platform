import org.labkey.gradle.task.ServerSideJS
import org.labkey.gradle.util.GroupNames
import org.labkey.gradle.util.BuildUtils
import org.labkey.gradle.util.ExternalDependency

plugins {
    id 'org.labkey.build.module'
}

project.tasks.register("serverSideJS", ServerSideJS) {
    ServerSideJS task ->
        task.group = GroupNames.CODE_GENERATION
        task.description = "Concatenate javascript files for use on the server side"
}
project.tasks.named('processModuleResources').configure { dependsOn(project.tasks.serverSideJS) }

dependencies {
    implementation "com.sun.mail:jakarta.mail:${javaMailVersion}"
    jspImplementation "com.sun.mail:jakarta.mail:${javaMailVersion}"

    BuildUtils.addExternalDependency(
        project,
        new ExternalDependency(
            "org.apache.commons:commons-math3:${commonsMath3Version}",
            "Commons Math",
            "Apache",
            "http://commons.apache.org/math/",
            ExternalDependency.APACHE_2_LICENSE_NAME,
            ExternalDependency.APACHE_2_LICENSE_URL,
            "Lightweight, self-contained mathematics and statistics components"
        )
    )

    BuildUtils.addExternalDependency(
        project,
        new ExternalDependency(
            "org.graalvm.polyglot:js-community:${graalVersion}",
            "GraalJS",
            "GraalJS",
            "https://github.com/graalvm/graaljs",
            "Universal Permissive License",
            "https://github.com/graalvm/graaljs/blob/master/LICENSE",
            "Server-side JavaScript evaluation"
        )
    )

    BuildUtils.addExternalDependency(
        project,
        new ExternalDependency(
            "org.graalvm.js:js-scriptengine:${graalVersion}",
            "GraalJS",
            "GraalJS",
            "https://github.com/graalvm/graaljs",
            "Universal Permissive License",
            "https://github.com/graalvm/graaljs/blob/master/LICENSE",
            "Server-side JavaScript evaluation"
        )
    )
}

BuildUtils.addLabKeyDependency(project: project, config: "implementation", depProjectPath: BuildUtils.getBootstrapProjectPath(gradle))
