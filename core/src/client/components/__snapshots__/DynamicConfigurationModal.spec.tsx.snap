// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DynamicConfigurationModal/> CAS Modal 1`] = `
<Modal
  footer={
    <Memo
      sticky={false}
    >
      <button
        className="labkey-button modal__save-button"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
      <a
        className="modal__help-link"
        href="https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureCas"
        rel="noopener noreferrer"
        target="_blank"
      >
        More about CAS authentication
      </a>
      <button
        className="labkey-button primary"
        onClick={[Function]}
        type="button"
      >
        Apply
      </button>
    </Memo>
  }
  onCancel={[Function]}
  title="Configure CAS Configuration1"
>
  <div
    className="modal__top"
  >
    <span
      className="bold-text"
    >
       Configuration Status 
    </span>
    <div
      className="modal__enable-toggle"
    >
      Enabled: 
      <Memo()
        active="on"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    className="bold-text modal__settings-text"
  >
     Settings
  </div>
  <Memo()
    canEdit={true}
    caption="Name/Description"
    name="description"
    onChange={[Function]}
    required={true}
    requiredFieldEmpty={false}
    type="text"
    value="CAS Configuration1"
  />
  <Memo()
    authConfig={
      {
        "autoRedirect": false,
        "configuration": 143,
        "description": "CAS Configuration1",
        "details": "https://www.labkey.org/cas",
        "enabled": true,
        "headerLogoUrl": null,
        "loginLogoUrl": null,
        "provider": "CAS",
        "serverUrl": "https://www.labkey.org/cas",
      }
    }
    canEdit={true}
    emptyRequiredFields={[]}
    fieldValues={
      {
        "auth_header_logo": "",
        "auth_login_page_logo": "",
        "autoRedirect": false,
        "changedFiles": [],
        "deletedLogos": [],
        "description": "CAS Configuration1",
        "enabled": true,
        "serverUrl": "https://www.labkey.org/cas",
      }
    }
    fields={
      [
        {
          "caption": "CAS Server URL",
          "defaultValue": "",
          "description": "Enter a valid HTTPS URL to your CAS server. The URL should start with https:// and end with /cas, for example: https://test.org/cas.",
          "name": "serverUrl",
          "required": true,
          "type": "input",
        },
        {
          "caption": "Default to CAS Login",
          "defaultValue": false,
          "description": "Redirects the login page directly to the CAS login instead of requiring the user click the CAS option.",
          "name": "autoRedirect",
          "required": false,
          "type": "checkbox",
        },
      ]
    }
    modalType={
      {
        "description": "Central Authentication Service (CAS)",
        "helpLink": "https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureCas",
        "saveLink": "/labkey/casclient-casSaveConfiguration.view?",
        "settingsFields": [
          {
            "caption": "CAS Server URL",
            "defaultValue": "",
            "description": "Enter a valid HTTPS URL to your CAS server. The URL should start with https:// and end with /cas, for example: https://test.org/cas.",
            "name": "serverUrl",
            "required": true,
            "type": "input",
          },
          {
            "caption": "Default to CAS Login",
            "defaultValue": false,
            "description": "Redirects the login page directly to the CAS login instead of requiring the user click the CAS option.",
            "name": "autoRedirect",
            "required": false,
            "type": "checkbox",
          },
        ],
        "sso": true,
      }
    }
    onChange={[Function]}
    onFileChange={[Function]}
    onFileRemoval={[Function]}
  />
  <Memo()
    canEdit={true}
    handleDeleteLogo={[Function]}
    headerLogoUrl={null}
    loginLogoUrl={null}
    onFileChange={[Function]}
  />
  <div
    className="modal__error-message"
  >
     
     
  </div>
</Modal>
`;

exports[`<DynamicConfigurationModal/> CAS Modal View-only 1`] = `
<Modal
  footer={
    <Memo
      sticky={false}
    >
      <button
        className="labkey-button modal__save-button"
        onClick={[Function]}
        type="button"
      >
        Close
      </button>
      <a
        className="modal__help-link"
        href="https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureCas"
        rel="noopener noreferrer"
        target="_blank"
      >
        More about CAS authentication
      </a>
    </Memo>
  }
  onCancel={[Function]}
  title="Configure CAS Configuration1"
>
  <div
    className="modal__top"
  >
    <span
      className="bold-text"
    >
       Configuration Status 
    </span>
    <div
      className="modal__enable-toggle"
    >
      Enabled: 
      <Memo()
        active="on"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    className="bold-text modal__settings-text"
  >
     Settings
  </div>
  <Memo()
    canEdit={false}
    caption="Name/Description"
    name="description"
    onChange={[Function]}
    required={true}
    requiredFieldEmpty={false}
    type="text"
    value="CAS Configuration1"
  />
  <Memo()
    authConfig={
      {
        "autoRedirect": false,
        "configuration": 143,
        "description": "CAS Configuration1",
        "details": "https://www.labkey.org/cas",
        "enabled": true,
        "headerLogoUrl": null,
        "loginLogoUrl": null,
        "provider": "CAS",
        "serverUrl": "https://www.labkey.org/cas",
      }
    }
    canEdit={false}
    emptyRequiredFields={[]}
    fieldValues={
      {
        "auth_header_logo": "",
        "auth_login_page_logo": "",
        "autoRedirect": false,
        "changedFiles": [],
        "deletedLogos": [],
        "description": "CAS Configuration1",
        "enabled": true,
        "serverUrl": "https://www.labkey.org/cas",
      }
    }
    fields={
      [
        {
          "caption": "CAS Server URL",
          "defaultValue": "",
          "description": "Enter a valid HTTPS URL to your CAS server. The URL should start with https:// and end with /cas, for example: https://test.org/cas.",
          "name": "serverUrl",
          "required": true,
          "type": "input",
        },
        {
          "caption": "Default to CAS Login",
          "defaultValue": false,
          "description": "Redirects the login page directly to the CAS login instead of requiring the user click the CAS option.",
          "name": "autoRedirect",
          "required": false,
          "type": "checkbox",
        },
      ]
    }
    modalType={
      {
        "description": "Central Authentication Service (CAS)",
        "helpLink": "https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureCas",
        "saveLink": "/labkey/casclient-casSaveConfiguration.view?",
        "settingsFields": [
          {
            "caption": "CAS Server URL",
            "defaultValue": "",
            "description": "Enter a valid HTTPS URL to your CAS server. The URL should start with https:// and end with /cas, for example: https://test.org/cas.",
            "name": "serverUrl",
            "required": true,
            "type": "input",
          },
          {
            "caption": "Default to CAS Login",
            "defaultValue": false,
            "description": "Redirects the login page directly to the CAS login instead of requiring the user click the CAS option.",
            "name": "autoRedirect",
            "required": false,
            "type": "checkbox",
          },
        ],
        "sso": true,
      }
    }
    onChange={[Function]}
    onFileChange={[Function]}
    onFileRemoval={[Function]}
  />
  <Memo()
    canEdit={false}
    handleDeleteLogo={[Function]}
    headerLogoUrl={null}
    loginLogoUrl={null}
    onFileChange={[Function]}
  />
  <div
    className="modal__error-message"
  >
     
     
  </div>
</Modal>
`;

exports[`<DynamicConfigurationModal/> Duo Modal 1`] = `
<Modal
  footer={
    <Memo
      sticky={false}
    >
      <button
        className="labkey-button modal__save-button"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
      <a
        className="modal__help-link"
        href="https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureDuoTwoFactor"
        rel="noopener noreferrer"
        target="_blank"
      >
        More about Duo 2 Factor authentication
      </a>
      <button
        className="labkey-button primary"
        onClick={[Function]}
        type="button"
      >
        Apply
      </button>
    </Memo>
  }
  onCancel={[Function]}
  title="Configure Duo 2 Factor Configuration"
>
  <div
    className="modal__top"
  >
    <span
      className="bold-text"
    >
       Configuration Status 
    </span>
    <div
      className="modal__enable-toggle"
    >
      Enabled: 
      <Memo()
        active="off"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    className="bold-text modal__settings-text"
  >
     Settings
  </div>
  <Memo()
    canEdit={true}
    caption="Name/Description"
    name="description"
    onChange={[Function]}
    required={true}
    requiredFieldEmpty={false}
    type="text"
    value="Duo 2 Factor Configuration"
  />
  <Memo()
    authConfig={
      {
        "apiHostname": "Api HostName",
        "configuration": 127,
        "description": "Duo 2 Factor Configuration",
        "details": "Api HostName",
        "enabled": false,
        "integrationKey": "Key1",
        "provider": "Duo 2 Factor",
        "userIdentifier": "UserID",
      }
    }
    canEdit={true}
    emptyRequiredFields={[]}
    fieldValues={
      {
        "apiHostname": "Api HostName",
        "description": "Duo 2 Factor Configuration",
        "enabled": false,
        "integrationKey": "Key1",
        "secretKey": "",
        "userIdentifier": "UserID",
      }
    }
    fields={
      [
        {
          "caption": "Integration Key",
          "defaultValue": "",
          "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
          "name": "integrationKey",
          "required": true,
          "type": "input",
        },
        {
          "caption": "Secret Key",
          "defaultValue": "",
          "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
          "name": "secretKey",
          "required": true,
          "type": "input",
        },
        {
          "caption": "API Hostname",
          "defaultValue": "",
          "description": "Your Labkey Admin with a Duo administrative account should have the hostname along with Integration and Secret Key.",
          "name": "apiHostname",
          "required": true,
          "type": "input",
        },
        {
          "caption": "User Identifier",
          "defaultValue": "UserID",
          "description": "Choose the way LabKey will match with Duo accounts.",
          "name": "userIdentifier",
          "options": {
            "FullEmailAddress": "Full Email Address",
            "UserID": "User ID",
            "UserName": "User Name",
          },
          "required": true,
          "type": "options",
        },
      ]
    }
    modalType={
      {
        "description": "Require two-factor authentication via Duo",
        "helpLink": "https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureDuoTwoFactor",
        "saveLink": "/labkey/duo-duoSaveConfiguration.view?",
        "settingsFields": [
          {
            "caption": "Integration Key",
            "defaultValue": "",
            "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
            "name": "integrationKey",
            "required": true,
            "type": "input",
          },
          {
            "caption": "Secret Key",
            "defaultValue": "",
            "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
            "name": "secretKey",
            "required": true,
            "type": "input",
          },
          {
            "caption": "API Hostname",
            "defaultValue": "",
            "description": "Your Labkey Admin with a Duo administrative account should have the hostname along with Integration and Secret Key.",
            "name": "apiHostname",
            "required": true,
            "type": "input",
          },
          {
            "caption": "User Identifier",
            "defaultValue": "UserID",
            "description": "Choose the way LabKey will match with Duo accounts.",
            "name": "userIdentifier",
            "options": {
              "FullEmailAddress": "Full Email Address",
              "UserID": "User ID",
              "UserName": "User Name",
            },
            "required": true,
            "type": "options",
          },
        ],
      }
    }
    onChange={[Function]}
    onFileChange={[Function]}
    onFileRemoval={[Function]}
  />
  <div
    className="modal__error-message"
  >
     
     
  </div>
</Modal>
`;

exports[`<DynamicConfigurationModal/> Duo Modal View-only 1`] = `
<Modal
  footer={
    <Memo
      sticky={false}
    >
      <button
        className="labkey-button modal__save-button"
        onClick={[Function]}
        type="button"
      >
        Close
      </button>
      <a
        className="modal__help-link"
        href="https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureDuoTwoFactor"
        rel="noopener noreferrer"
        target="_blank"
      >
        More about Duo 2 Factor authentication
      </a>
    </Memo>
  }
  onCancel={[Function]}
  title="Configure Duo 2 Factor Configuration"
>
  <div
    className="modal__top"
  >
    <span
      className="bold-text"
    >
       Configuration Status 
    </span>
    <div
      className="modal__enable-toggle"
    >
      Enabled: 
      <Memo()
        active="off"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    className="bold-text modal__settings-text"
  >
     Settings
  </div>
  <Memo()
    canEdit={false}
    caption="Name/Description"
    name="description"
    onChange={[Function]}
    required={true}
    requiredFieldEmpty={false}
    type="text"
    value="Duo 2 Factor Configuration"
  />
  <Memo()
    authConfig={
      {
        "apiHostname": "Api HostName",
        "configuration": 127,
        "description": "Duo 2 Factor Configuration",
        "details": "Api HostName",
        "enabled": false,
        "integrationKey": "Key1",
        "provider": "Duo 2 Factor",
        "userIdentifier": "UserID",
      }
    }
    canEdit={false}
    emptyRequiredFields={[]}
    fieldValues={
      {
        "apiHostname": "Api HostName",
        "description": "Duo 2 Factor Configuration",
        "enabled": false,
        "integrationKey": "Key1",
        "secretKey": "",
        "userIdentifier": "UserID",
      }
    }
    fields={
      [
        {
          "caption": "Integration Key",
          "defaultValue": "",
          "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
          "name": "integrationKey",
          "required": true,
          "type": "input",
        },
        {
          "caption": "Secret Key",
          "defaultValue": "",
          "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
          "name": "secretKey",
          "required": true,
          "type": "input",
        },
        {
          "caption": "API Hostname",
          "defaultValue": "",
          "description": "Your Labkey Admin with a Duo administrative account should have the hostname along with Integration and Secret Key.",
          "name": "apiHostname",
          "required": true,
          "type": "input",
        },
        {
          "caption": "User Identifier",
          "defaultValue": "UserID",
          "description": "Choose the way LabKey will match with Duo accounts.",
          "name": "userIdentifier",
          "options": {
            "FullEmailAddress": "Full Email Address",
            "UserID": "User ID",
            "UserName": "User Name",
          },
          "required": true,
          "type": "options",
        },
      ]
    }
    modalType={
      {
        "description": "Require two-factor authentication via Duo",
        "helpLink": "https://www.labkey.org/Documentation/19.3/wiki-page.view?name=configureDuoTwoFactor",
        "saveLink": "/labkey/duo-duoSaveConfiguration.view?",
        "settingsFields": [
          {
            "caption": "Integration Key",
            "defaultValue": "",
            "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
            "name": "integrationKey",
            "required": true,
            "type": "input",
          },
          {
            "caption": "Secret Key",
            "defaultValue": "",
            "description": "Your Labkey Admin with a Duo administrative account should have generated this key.",
            "name": "secretKey",
            "required": true,
            "type": "input",
          },
          {
            "caption": "API Hostname",
            "defaultValue": "",
            "description": "Your Labkey Admin with a Duo administrative account should have the hostname along with Integration and Secret Key.",
            "name": "apiHostname",
            "required": true,
            "type": "input",
          },
          {
            "caption": "User Identifier",
            "defaultValue": "UserID",
            "description": "Choose the way LabKey will match with Duo accounts.",
            "name": "userIdentifier",
            "options": {
              "FullEmailAddress": "Full Email Address",
              "UserID": "User ID",
              "UserName": "User Name",
            },
            "required": true,
            "type": "options",
          },
        ],
      }
    }
    onChange={[Function]}
    onFileChange={[Function]}
    onFileRemoval={[Function]}
  />
  <div
    className="modal__error-message"
  >
     
     
  </div>
</Modal>
`;
